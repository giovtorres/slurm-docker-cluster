#!/usr/bin/env expect
############################################################################
# Purpose: Test of Slurm functionality
#          Test parallel launch of srun (e.g. "srun srun id")
############################################################################
# Copyright (C) 2002-2006 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

#
# Spawn srun with $task_cnt tasks each of which runs a $mult way /bin/id
#

# NOTE: The inner srun needs to use --cpu-bind=quiet option so that it ignores
# SLURM_CPU_BIND environment variable that gets set if task/affinity plugin is
# used. Each node could have a diffenent cpu mask specified by SLURM_CPU_BIND
# making any tasks launched from that node be required to use the same mask
# leading to "CPU binding outside of job step allocation" errors.

set mult         4
set task_output  0
set task_cnt 4
set node_cnt 1-4

set timeout $max_job_delay
spawn $srun --gres=craynetwork:0 -N$node_cnt -n$task_cnt -O -t1 --overlap $srun --cpu-bind=quiet -l -n$mult -O --overlap $bin_id
expect {
	-re "($number): uid=" {
		incr task_output
		exp_continue
	}
	timeout {
		fail "srun not responding"
	}
	eof {
		wait
	}
}

if {$task_output != [expr $task_cnt * $mult]} {
	fail "Failed to get output from all tasks"
}
